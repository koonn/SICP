;; EXERCISE 2.11
(define (multi-interval z w)
  (let ((a (lower-bound z))
	(b (upper-bound z))
	(x (lower-bound w))
	(y (upper-bound w)))
    (cond ((and (< a 0)  (< b 0)  (< x 0)  (< y 0))  (make-interval (* b y) (* a x)))
	  ((and (< a 0)  (< b 0)  (< x 0)  (>= y 0)) (make-interval (* b y) (* b x)))
	  ((and (< a 0)  (< b 0)  (>= x 0) (>= y 0)) (make-interval (* b y) (* a x)))
	  ((and (< a 0)  (>= b 0) (< x 0)  (< y 0))  (make-interval (* b y) (* a y)))
	  ((and (< a 0)  (>= b 0) (< x 0)  (>= y 0)) (make-interval (min (* a y) (* b x))
								    (max (* a x) (* b y))))
	  ((and (< a 0)  (>= b 0) (>= x 0) (>= y 0)) (make-interval (* a y) (* b y)))
	  ((and (>= a 0) (>= b 0) (< x 0)  (< y 0))  (make-interval (* b y) (* a x)))
	  ((and (>= a 0) (>= b 0) (< x 0)  (>= y 0)) (make-interval (* b x) (* b y)))
	  ((and (>= a 0) (>= b 0) (>= x 0) (>= y 0)) (make-interval (* a x) (* b y))))))
